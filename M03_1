import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        boolean continueLoop = true;

        while (continueLoop) {
            // Create two Circle objects with different radii
            Circle circle1 = new Circle(5.0);
            Circle circle2 = new Circle(3.0);

            // Print information for the first Circle 
            System.out.println("Circle 1's radius: " + circle1.getRadius());
            System.out.println("Circle 1's area: " + circle1.getArea());
            System.out.println("Circle 1's diameter: " + circle1.getDiameter());
            System.out.println("Circle 1's perimeter: " + circle1.getPerimeter());

            // Print information for the second Circle 
            System.out.println("Circle 2's radius: " + circle2.getRadius());
            System.out.println("Circle 2's area: " + circle2.getArea());
            System.out.println("Circle 2's diameter: " + circle2.getDiameter());
            System.out.println("Circle 2's perimeter: " + circle2.getPerimeter());

            // Compare the circles based on their radii and display the results
            int comparisonResult = circle1.compareTo(circle2);
            if (comparisonResult < 0) {
                System.out.println("Circle 1 is smaller.");
            } else if (comparisonResult > 0) {
                System.out.println("Circle 1 is larger.");
            } else {
                System.out.println("Circle 1 and Circle 2 have the same radius.");
            }

            // Check if two circles are equal based on radii and display results
            boolean areEqual = circle1.equals(circle2);
            System.out.println("Circle 1 and Circle 2 are equal (based on radii): " + areEqual);

            // Ask the user if they want to continue or quit
            System.out.print("Press 0 to quit, or any other key to continue: ");
            String input = scanner.nextLine();
            if (input.equals("0")) {
                continueLoop = false;
            }
        }

        // Close the scanner when done
        scanner.close();
    }
}

class Circle extends GeometricObject implements Comparable<Circle> {
    private double radius;

    public Circle() {
    }

    public Circle(double radius) {
        this.radius = radius;
    }

    public double getRadius() {
        return radius;
    }

    public void setRadius(double radius) {
        this.radius = radius;
    }

    public double getArea() {
        return radius * radius * Math.PI;
    }

    public double getDiameter() {
        return 2 * radius;
    }

    public double getPerimeter() {
        return 2 * radius * Math.PI;
    }

    @Override
    public int compareTo(Circle o) {
        if (radius < o.radius) {
            return -1;
        } else if (radius > o.radius) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj instanceof Circle) {
            Circle c = (Circle) obj;
            return this.radius == c.radius;
        }
        return false;
    }
}

class GeometricObject {
}
