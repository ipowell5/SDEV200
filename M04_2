import java.io.*;
import java.util.*;

public class CountKeywords {
    public static void main(String[] args) {
        if (args.length != 1) {
            System.out.println("Usage: java CountKeywords <Java source file>");
            return;
        }
        
        String filename = args[0];
        File file = new File(filename);
        
        if (file.exists()) {
            try {
                int keywordCount = countKeywords(file);
                System.out.println("The number of keywords in " + filename + " is " + keywordCount);
            } catch (IOException e) {
                System.out.println("An error occurred while reading the file.");
                e.printStackTrace();
            }
        } else {
            System.out.println("File " + filename + " does not exist");
        }
    }

    public static int countKeywords(File file) throws IOException {
        String[] keywords = {"abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class", 
                             "const", "continue", "default", "do", "double", "else", "enum", "extends", "final", 
                             "finally", "float", "for", "goto", "if", "implements", "import", "instanceof", 
                             "int", "interface", "long", "native", "new", "package", "private", "protected", 
                             "public", "return", "short", "static", "strictfp", "super", "switch", 
                             "synchronized", "this", "throw", "throws", "transient", "try", "void", "volatile", 
                             "while", "true", "false", "null"};

        Set<String> keywordSet = new HashSet<>(Arrays.asList(keywords));
        int count = 0;

        try (Scanner scanner = new Scanner(file)) {
            boolean inComment = false;
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine().trim();

                if (line.startsWith("//")) {
                    continue; // Skip line comment
                } else if (line.startsWith("/*")) {
                    inComment = true;
                    continue; // Skip block comment start
                } else if (line.endsWith("*/")) {
                    inComment = false;
                    continue; // Skip block comment end
                }

                if (!inComment) {
                    Scanner lineScanner = new Scanner(line);
                    lineScanner.useDelimiter("[\\s\\(\\)\\{\\}\\[\\];,.*+-/%=!<>?:&|\"'\\^~]");
                    while (lineScanner.hasNext()) {
                        String word = lineScanner.next();
                        if (keywordSet.contains(word)) {
                            count++;
                        }
                    }
                    lineScanner.close();
                }
            }
        }

        return count;
    }
}
